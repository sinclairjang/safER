create type "public"."reservation_status" as enum ('pending', 'approved', 'rejected', 'cancelled');

create sequence "public"."hospital_emergency_info_info_id_seq";

create sequence "public"."hospitals_id_seq1";

create sequence "public"."reservations_id_seq";

create table "public"."hospital_bed_availability" (
    "hospital_id" integer not null,
    "hvec" integer,
    "hvoc" integer,
    "hvcc" integer,
    "hvncc" integer,
    "hvccc" integer,
    "hvicc" integer,
    "hvgc" integer,
    "hv2" integer,
    "hv3" integer,
    "hv4" integer,
    "hv5" integer,
    "hv6" integer,
    "hv7" integer,
    "hv8" integer,
    "hv9" integer,
    "hv10" boolean,
    "hv11" boolean,
    "hv13" integer,
    "hv14" integer,
    "hv15" integer,
    "hv16" integer,
    "hv17" integer,
    "hv18" integer,
    "hv19" integer,
    "hv21" integer,
    "hv22" integer,
    "hv23" integer,
    "hv24" integer,
    "hv25" integer,
    "hv26" integer,
    "hv27" integer,
    "hv28" integer,
    "hv29" integer,
    "hv30" integer,
    "hv31" integer,
    "hv32" integer,
    "hv33" integer,
    "hv34" integer,
    "hv35" integer,
    "hv36" integer,
    "hv37" integer,
    "hv38" integer,
    "hv39" integer,
    "hv40" integer,
    "hv41" integer,
    "hv42" integer,
    "hv43" integer,
    "hvctayn" boolean,
    "hvmriayn" boolean,
    "hvangioayn" boolean,
    "hvventiayn" boolean,
    "hvventisoayn" boolean,
    "hvincuayn" boolean,
    "hvcrrtayn" boolean,
    "hvecmoayn" boolean,
    "hvoxyayn" boolean,
    "hvhypoayn" boolean,
    "hvamyn" boolean,
    "hvidate" text,
    "updated_at" timestamp with time zone
);


create table "public"."hospital_emergency_info" (
    "info_id" integer not null default nextval('hospital_emergency_info_info_id_seq'::regclass),
    "dutyaddr" text not null,
    "dutyemcls" text not null,
    "dutyemclsname" text not null,
    "wgs84lon" double precision not null,
    "wgs84lat" double precision not null
);


create table "public"."hospitals" (
    "id" integer not null default nextval('hospitals_id_seq1'::regclass),
    "hpid" text not null,
    "dutyname" text not null,
    "dutytel3" text,
    "created_at" timestamp with time zone default now(),
    "tenant_id" text not null
);


create table "public"."reservations" (
    "id" integer not null default nextval('reservations_id_seq'::regclass),
    "hospital_id" integer not null,
    "department" text not null,
    "reserved_by" text not null,
    "reserved_beds" integer not null,
    "requested_at" timestamp with time zone default now(),
    "approved_at" timestamp with time zone,
    "rejected_at" timestamp with time zone,
    "cancelled_at" timestamp with time zone,
    "updated_at" timestamp with time zone default now(),
    "status" reservation_status not null default 'pending'::reservation_status
);


create table "public"."service_users" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "full_name" text,
    "supabase_user" uuid not null
);


alter table "public"."service_users" enable row level security;

create table "public"."tenant_permissions" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "service_user" bigint not null,
    "tenant" text not null
);


alter table "public"."tenant_permissions" enable row level security;

create table "public"."tenants" (
    "id" text not null,
    "created_at" timestamp with time zone not null default now(),
    "name" text not null,
    "domain" text not null
);


alter table "public"."tenants" enable row level security;

alter sequence "public"."hospital_emergency_info_info_id_seq" owned by "public"."hospital_emergency_info"."info_id";

alter sequence "public"."hospitals_id_seq1" owned by "public"."hospitals"."id";

alter sequence "public"."reservations_id_seq" owned by "public"."reservations"."id";

CREATE UNIQUE INDEX hospital_bed_availability_pkey ON public.hospital_bed_availability USING btree (hospital_id);

CREATE UNIQUE INDEX hospital_emergency_info_pkey ON public.hospital_emergency_info USING btree (info_id);

CREATE UNIQUE INDEX hospitals_hpid_key1 ON public.hospitals USING btree (hpid);

CREATE UNIQUE INDEX hospitals_pkey1 ON public.hospitals USING btree (id);

CREATE UNIQUE INDEX hospitals_tenant_id_key ON public.hospitals USING btree (tenant_id);

CREATE UNIQUE INDEX reservations_pkey ON public.reservations USING btree (id);

CREATE UNIQUE INDEX service_users_pkey ON public.service_users USING btree (id);

CREATE UNIQUE INDEX service_users_supabase_user_key ON public.service_users USING btree (supabase_user);

CREATE UNIQUE INDEX tenant_permissions_pkey ON public.tenant_permissions USING btree (id);

CREATE UNIQUE INDEX tenants_domain_key ON public.tenants USING btree (domain);

CREATE UNIQUE INDEX tenants_pkey ON public.tenants USING btree (id);

alter table "public"."hospital_bed_availability" add constraint "hospital_bed_availability_pkey" PRIMARY KEY using index "hospital_bed_availability_pkey";

alter table "public"."hospital_emergency_info" add constraint "hospital_emergency_info_pkey" PRIMARY KEY using index "hospital_emergency_info_pkey";

alter table "public"."hospitals" add constraint "hospitals_pkey1" PRIMARY KEY using index "hospitals_pkey1";

alter table "public"."reservations" add constraint "reservations_pkey" PRIMARY KEY using index "reservations_pkey";

alter table "public"."service_users" add constraint "service_users_pkey" PRIMARY KEY using index "service_users_pkey";

alter table "public"."tenant_permissions" add constraint "tenant_permissions_pkey" PRIMARY KEY using index "tenant_permissions_pkey";

alter table "public"."tenants" add constraint "tenants_pkey" PRIMARY KEY using index "tenants_pkey";

alter table "public"."hospital_bed_availability" add constraint "hospital_bed_availability_hospital_id_fkey" FOREIGN KEY (hospital_id) REFERENCES hospitals(id) not valid;

alter table "public"."hospital_bed_availability" validate constraint "hospital_bed_availability_hospital_id_fkey";

alter table "public"."hospital_emergency_info" add constraint "hospital_emergency_info_dutyemcls_check" CHECK ((dutyemcls = ANY (ARRAY['G001'::text, 'G006'::text, 'G007'::text, 'G009'::text]))) not valid;

alter table "public"."hospital_emergency_info" validate constraint "hospital_emergency_info_dutyemcls_check";

alter table "public"."hospital_emergency_info" add constraint "hospital_emergency_info_info_id_fkey" FOREIGN KEY (info_id) REFERENCES hospitals(id) not valid;

alter table "public"."hospital_emergency_info" validate constraint "hospital_emergency_info_info_id_fkey";

alter table "public"."hospitals" add constraint "hospitals_hpid_key1" UNIQUE using index "hospitals_hpid_key1";

alter table "public"."hospitals" add constraint "hospitals_tenant_id_fkey" FOREIGN KEY (tenant_id) REFERENCES tenants(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."hospitals" validate constraint "hospitals_tenant_id_fkey";

alter table "public"."hospitals" add constraint "hospitals_tenant_id_key" UNIQUE using index "hospitals_tenant_id_key";

alter table "public"."reservations" add constraint "reservations_hospital_id_fkey" FOREIGN KEY (hospital_id) REFERENCES hospitals(id) not valid;

alter table "public"."reservations" validate constraint "reservations_hospital_id_fkey";

alter table "public"."service_users" add constraint "service_users_supabase_user_fkey" FOREIGN KEY (supabase_user) REFERENCES auth.users(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."service_users" validate constraint "service_users_supabase_user_fkey";

alter table "public"."service_users" add constraint "service_users_supabase_user_key" UNIQUE using index "service_users_supabase_user_key";

alter table "public"."tenant_permissions" add constraint "tenant_permissions_service_user_fkey" FOREIGN KEY (service_user) REFERENCES service_users(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."tenant_permissions" validate constraint "tenant_permissions_service_user_fkey";

alter table "public"."tenant_permissions" add constraint "tenant_permissions_tenant_fkey" FOREIGN KEY (tenant) REFERENCES tenants(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."tenant_permissions" validate constraint "tenant_permissions_tenant_fkey";

alter table "public"."tenants" add constraint "tenants_domain_key" UNIQUE using index "tenants_domain_key";

grant delete on table "public"."hospital_bed_availability" to "anon";

grant insert on table "public"."hospital_bed_availability" to "anon";

grant references on table "public"."hospital_bed_availability" to "anon";

grant select on table "public"."hospital_bed_availability" to "anon";

grant trigger on table "public"."hospital_bed_availability" to "anon";

grant truncate on table "public"."hospital_bed_availability" to "anon";

grant update on table "public"."hospital_bed_availability" to "anon";

grant delete on table "public"."hospital_bed_availability" to "authenticated";

grant insert on table "public"."hospital_bed_availability" to "authenticated";

grant references on table "public"."hospital_bed_availability" to "authenticated";

grant select on table "public"."hospital_bed_availability" to "authenticated";

grant trigger on table "public"."hospital_bed_availability" to "authenticated";

grant truncate on table "public"."hospital_bed_availability" to "authenticated";

grant update on table "public"."hospital_bed_availability" to "authenticated";

grant delete on table "public"."hospital_bed_availability" to "service_role";

grant insert on table "public"."hospital_bed_availability" to "service_role";

grant references on table "public"."hospital_bed_availability" to "service_role";

grant select on table "public"."hospital_bed_availability" to "service_role";

grant trigger on table "public"."hospital_bed_availability" to "service_role";

grant truncate on table "public"."hospital_bed_availability" to "service_role";

grant update on table "public"."hospital_bed_availability" to "service_role";

grant delete on table "public"."hospital_emergency_info" to "anon";

grant insert on table "public"."hospital_emergency_info" to "anon";

grant references on table "public"."hospital_emergency_info" to "anon";

grant select on table "public"."hospital_emergency_info" to "anon";

grant trigger on table "public"."hospital_emergency_info" to "anon";

grant truncate on table "public"."hospital_emergency_info" to "anon";

grant update on table "public"."hospital_emergency_info" to "anon";

grant delete on table "public"."hospital_emergency_info" to "authenticated";

grant insert on table "public"."hospital_emergency_info" to "authenticated";

grant references on table "public"."hospital_emergency_info" to "authenticated";

grant select on table "public"."hospital_emergency_info" to "authenticated";

grant trigger on table "public"."hospital_emergency_info" to "authenticated";

grant truncate on table "public"."hospital_emergency_info" to "authenticated";

grant update on table "public"."hospital_emergency_info" to "authenticated";

grant delete on table "public"."hospital_emergency_info" to "service_role";

grant insert on table "public"."hospital_emergency_info" to "service_role";

grant references on table "public"."hospital_emergency_info" to "service_role";

grant select on table "public"."hospital_emergency_info" to "service_role";

grant trigger on table "public"."hospital_emergency_info" to "service_role";

grant truncate on table "public"."hospital_emergency_info" to "service_role";

grant update on table "public"."hospital_emergency_info" to "service_role";

grant delete on table "public"."hospitals" to "anon";

grant insert on table "public"."hospitals" to "anon";

grant references on table "public"."hospitals" to "anon";

grant select on table "public"."hospitals" to "anon";

grant trigger on table "public"."hospitals" to "anon";

grant truncate on table "public"."hospitals" to "anon";

grant update on table "public"."hospitals" to "anon";

grant delete on table "public"."hospitals" to "authenticated";

grant insert on table "public"."hospitals" to "authenticated";

grant references on table "public"."hospitals" to "authenticated";

grant select on table "public"."hospitals" to "authenticated";

grant trigger on table "public"."hospitals" to "authenticated";

grant truncate on table "public"."hospitals" to "authenticated";

grant update on table "public"."hospitals" to "authenticated";

grant delete on table "public"."hospitals" to "service_role";

grant insert on table "public"."hospitals" to "service_role";

grant references on table "public"."hospitals" to "service_role";

grant select on table "public"."hospitals" to "service_role";

grant trigger on table "public"."hospitals" to "service_role";

grant truncate on table "public"."hospitals" to "service_role";

grant update on table "public"."hospitals" to "service_role";

grant delete on table "public"."reservations" to "anon";

grant insert on table "public"."reservations" to "anon";

grant references on table "public"."reservations" to "anon";

grant select on table "public"."reservations" to "anon";

grant trigger on table "public"."reservations" to "anon";

grant truncate on table "public"."reservations" to "anon";

grant update on table "public"."reservations" to "anon";

grant delete on table "public"."reservations" to "authenticated";

grant insert on table "public"."reservations" to "authenticated";

grant references on table "public"."reservations" to "authenticated";

grant select on table "public"."reservations" to "authenticated";

grant trigger on table "public"."reservations" to "authenticated";

grant truncate on table "public"."reservations" to "authenticated";

grant update on table "public"."reservations" to "authenticated";

grant delete on table "public"."reservations" to "service_role";

grant insert on table "public"."reservations" to "service_role";

grant references on table "public"."reservations" to "service_role";

grant select on table "public"."reservations" to "service_role";

grant trigger on table "public"."reservations" to "service_role";

grant truncate on table "public"."reservations" to "service_role";

grant update on table "public"."reservations" to "service_role";

grant delete on table "public"."service_users" to "anon";

grant insert on table "public"."service_users" to "anon";

grant references on table "public"."service_users" to "anon";

grant select on table "public"."service_users" to "anon";

grant trigger on table "public"."service_users" to "anon";

grant truncate on table "public"."service_users" to "anon";

grant update on table "public"."service_users" to "anon";

grant delete on table "public"."service_users" to "authenticated";

grant insert on table "public"."service_users" to "authenticated";

grant references on table "public"."service_users" to "authenticated";

grant select on table "public"."service_users" to "authenticated";

grant trigger on table "public"."service_users" to "authenticated";

grant truncate on table "public"."service_users" to "authenticated";

grant update on table "public"."service_users" to "authenticated";

grant delete on table "public"."service_users" to "service_role";

grant insert on table "public"."service_users" to "service_role";

grant references on table "public"."service_users" to "service_role";

grant select on table "public"."service_users" to "service_role";

grant trigger on table "public"."service_users" to "service_role";

grant truncate on table "public"."service_users" to "service_role";

grant update on table "public"."service_users" to "service_role";

grant delete on table "public"."tenant_permissions" to "anon";

grant insert on table "public"."tenant_permissions" to "anon";

grant references on table "public"."tenant_permissions" to "anon";

grant select on table "public"."tenant_permissions" to "anon";

grant trigger on table "public"."tenant_permissions" to "anon";

grant truncate on table "public"."tenant_permissions" to "anon";

grant update on table "public"."tenant_permissions" to "anon";

grant delete on table "public"."tenant_permissions" to "authenticated";

grant insert on table "public"."tenant_permissions" to "authenticated";

grant references on table "public"."tenant_permissions" to "authenticated";

grant select on table "public"."tenant_permissions" to "authenticated";

grant trigger on table "public"."tenant_permissions" to "authenticated";

grant truncate on table "public"."tenant_permissions" to "authenticated";

grant update on table "public"."tenant_permissions" to "authenticated";

grant delete on table "public"."tenant_permissions" to "service_role";

grant insert on table "public"."tenant_permissions" to "service_role";

grant references on table "public"."tenant_permissions" to "service_role";

grant select on table "public"."tenant_permissions" to "service_role";

grant trigger on table "public"."tenant_permissions" to "service_role";

grant truncate on table "public"."tenant_permissions" to "service_role";

grant update on table "public"."tenant_permissions" to "service_role";

grant delete on table "public"."tenants" to "anon";

grant insert on table "public"."tenants" to "anon";

grant references on table "public"."tenants" to "anon";

grant select on table "public"."tenants" to "anon";

grant trigger on table "public"."tenants" to "anon";

grant truncate on table "public"."tenants" to "anon";

grant update on table "public"."tenants" to "anon";

grant delete on table "public"."tenants" to "authenticated";

grant insert on table "public"."tenants" to "authenticated";

grant references on table "public"."tenants" to "authenticated";

grant select on table "public"."tenants" to "authenticated";

grant trigger on table "public"."tenants" to "authenticated";

grant truncate on table "public"."tenants" to "authenticated";

grant update on table "public"."tenants" to "authenticated";

grant delete on table "public"."tenants" to "service_role";

grant insert on table "public"."tenants" to "service_role";

grant references on table "public"."tenants" to "service_role";

grant select on table "public"."tenants" to "service_role";

grant trigger on table "public"."tenants" to "service_role";

grant truncate on table "public"."tenants" to "service_role";

grant update on table "public"."tenants" to "service_role";

create policy "access own user data"
on "public"."service_users"
as permissive
for select
to authenticated
using ((supabase_user = auth.uid()));


create policy "allow reading own permissions"
on "public"."tenant_permissions"
as permissive
for select
to authenticated
using ((EXISTS ( SELECT
   FROM service_users su
  WHERE ((su.id = tenant_permissions.service_user) AND (su.supabase_user = auth.uid())))));


create policy "can read tenant if has permission"
on "public"."tenants"
as permissive
for select
to authenticated
using (COALESCE((((auth.jwt() -> 'app_metadata'::text) -> 'tenants'::text) ? id), false));



